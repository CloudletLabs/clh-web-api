{
  "swagger": "2.0",
  "info": {
    "title": "clh-web-api",
    "version": "1",
    "description": "This is the CloudletHub API"
  },
  "host": "clh-web-api-dev.herokuapp.com",
  "basePath": "/api/current",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Basic": {
      "type": "basic",
      "description": "Password auth"
    },
    "Bearer": {
      "type": "apiKey",
      "description": "Token auth",
      "in": "header",
      "name": "Authorization"
    }
  },
  "definitions": {
    "info": {
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "version",
        "apiVersion"
      ],
      "type": "object"
    },
    "authToken": {
      "properties": {
        "auth_token": {
          "type": "string"
        },
        "createDate": {
          "type": "integer"
        },
        "userAgent": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "lastUsed": {
          "type": "integer"
        },
        "user": {
          "properties": {
            "roles": {
              "items": {
                "properties": {
                  "roleId": {
                    "type": "string"
                  }
                },
                "required": [
                  "roleId"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "username": {
              "type": "string"
            }
          },
          "required": [
            "username",
            "roles"
          ],
          "type": "object"
        }
      },
      "required": [
        "auth_token",
        "createDate",
        "userAgent",
        "ip",
        "lastUsed",
        "user"
      ],
      "type": "object"
    },
    "user": {
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "roles": {
          "items": {
            "properties": {
              "roleId": {
                "type": "string"
              }
            },
            "required": [
              "roleId"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "username",
        "password",
        "email",
        "name",
        "avatar",
        "roles"
      ],
      "type": "object"
    },
    "userForPost": {
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "username",
        "password",
        "email",
        "name"
      ],
      "type": "object"
    },
    "userForPut": {
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "roles": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "users": {
      "items": {
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "roles": {
            "items": {
              "properties": {
                "roleId": {
                  "type": "string"
                }
              },
              "required": [
                "roleId"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "username",
          "password",
          "email",
          "name",
          "avatar",
          "roles"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "news": {
      "properties": {
        "slug": {
          "type": "string"
        },
        "creator": {
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "createDate": {
          "type": "integer"
        },
        "subject": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "required": [
        "slug",
        "creator",
        "subject",
        "text",
        "createDate"
      ],
      "type": "object"
    },
    "newsForPost": {
      "properties": {
        "slug": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "required": [
        "slug",
        "subject",
        "text"
      ],
      "type": "object"
    },
    "newsForPut": {
      "properties": {
        "slug": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "newss": {
      "items": {
        "properties": {
          "slug": {
            "type": "string"
          },
          "creator": {
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          "createDate": {
            "type": "integer"
          },
          "subject": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        },
        "required": [
          "slug",
          "creator",
          "subject",
          "text",
          "createDate"
        ],
        "type": "object"
      },
      "type": "array"
    }
  },
  "paths": {
    "/info": {
      "get": {
        "description": "Get service info",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/info"
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "description": "Get service status",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth_token": {
      "post": {
        "security": [
          {
            "Basic": []
          }
        ],
        "description": "Get auth token for username+password pair",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/authToken"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create new token instead of expired one",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/authToken"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth_token/{token}": {
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Delete token",
        "parameters": [
          {
            "description": "Token",
            "in": "path",
            "name": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get user for this token",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/users"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "description": "Create new user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userForPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "400": {
            "description": "User with this username already exists"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get user",
        "parameters": [
          {
            "description": "Uniq user ID",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Update user",
        "parameters": [
          {
            "description": "Uniq user ID",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userForPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Delete user",
        "parameters": [
          {
            "description": "Uniq user ID",
            "in": "path",
            "name": "username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/news": {
      "get": {
        "description": "Get news",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/newss"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create new news",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newsForPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/news"
            }
          },
          "400": {
            "description": "News with this slug already exists"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/news/{slug}": {
      "get": {
        "description": "Get news by slug",
        "parameters": [
          {
            "description": "URL that identifies a page in human-readable keywords",
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/news"
            }
          },
          "404": {
            "description": "News with this slug not found"
          }
        }
      },
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Update news",
        "parameters": [
          {
            "description": "URL that identifies a page in human-readable keywords",
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newsForPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/news"
            }
          },
          "400": {
            "description": "News with this slug already exists"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "News with this slug not found"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Delete news",
        "parameters": [
          {
            "description": "URL that identifies a page in human-readable keywords",
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}